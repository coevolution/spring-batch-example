<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
    <bean id="dataSource_loandb" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
        <!--<bean id="dataSource_loandb" class="com.datatrees.commons.db.DashuDataSource" destroy-method="close">-->
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="${db.loandb.url}"/>
        <property name="username" value="${db.loandb.username}"/>
        <property name="password" value="${db.loandb.password}"/>
        <!--<property name="filters" value="stat,wall,log4j"/>-->
        <property name="filters" value="stat,wall"/>
        <!--下面为连接池的补充设置，应用到上面所有数据源中# 初始化大小，最小，最大-->
        <property name="initialSize" value="5"/>
        <property name="minIdle" value="5"/>
        <property name="maxActive" value="50"/>
        <!--配置获取连接等待超时的时间-->
        <property name="maxWait" value="5000"/>
        <!--配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒-->
        <property name="timeBetweenEvictionRunsMillis" value="6000"/>
        <!--配置一个连接在池中最小生存的时间，单位是毫秒-->
        <property name="minEvictableIdleTimeMillis" value="60000"/>
        <property name="validationQuery" value="SELECT 1 FROM DUAL"/>
        <property name="testWhileIdle" value="true"/>
        <property name="testOnBorrow" value="false"/>
        <property name="testOnReturn" value="false"/>
        <!--打开PSCache，并且指定每个连接上PSCache的大小-->
        <property name="poolPreparedStatements" value="true"/>
        <property name="maxPoolPreparedStatementPerConnectionSize" value="20"/>
        <!--通过connectProperties属性来打开mergeSql功能；慢SQL记录-->
        <property name="connectionProperties" value="druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000"/>
        <!--合并多个DruidDataSource的监控数据-->
        <!--<property name="useGlobalDataSourceStat" value="true"/>-->
    </bean>

    <bean id="transactionManager_loandb" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource_loandb"/>
        <property name="nestedTransactionAllowed" value="true"/>
        <property name="rollbackOnCommitFailure" value="true"/>
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager_loandb" mode="aspectj"/>

    <bean id="sqlSessionFactory_loandb" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource_loandb"/>
        <!--<property name="mapperLocations">-->
            <!--<list>-->
                <!--<value>classpath*:loandb/**/*.xml</value>-->
                <!--<value>classpath*:sqlmap/*.xml</value>-->
            <!--</list>-->
        <!--</property>-->

        <!--<property name="plugins">-->
            <!--<array>-->
                <!--<bean class="com.datatrees.commons.db.plugin.SecuredUpdateInterceptor"/>-->
                <!--<bean class="com.datatrees.commons.db.plugin.SecuredQueryInterceptor"/>-->
                <!--<bean class="com.datatrees.commons.db.plugin.OffsetLimitInterceptor"/>-->
            <!--</array>-->
        <!--</property>-->

        <!--<property name="typeHandlers">-->
            <!--<array>-->
                <!--<bean class="com.datatrees.commons.db.handler.DecimalTypeHandler"/>-->
                <!--<bean class="com.datatrees.commons.db.handler.DecimalTypeHandler"/>-->
            <!--</array>-->
        <!--</property>-->
    </bean>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory_loandb"/>
        <property name="basePackage"
                  value="com.datatrees.dao.loandb.mapper, com.treefinance.payment.loan.dao.mapper"/>
    </bean>

    <bean id="loandbJdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource_loandb"/>
    </bean>

    <bean id="lobHandler" class="org.springframework.jdbc.support.lob.DefaultLobHandler"/>
</beans>
